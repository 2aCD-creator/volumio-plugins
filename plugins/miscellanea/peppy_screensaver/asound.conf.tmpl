pcm.!default {
	type plug
	slave.pcm "peppyalsa"
}
ctl.!default {
   	type hw
   	card ${card}
   	device ${device}
}

# input from Spotify / airplay
pcm.peppyalsa {	
	type plug
	slave.channels 4
  
	slave.pcm {
		type multi
	
		slaves.a.pcm "mpd_alsa"
		slaves.a.channels 2
		slaves.b.pcm "mpd_peppyalsa"
		slaves.b.channels 2
	
		bindings.0 { slave a; channel 0; }
		bindings.1 { slave a; channel 1; }
		bindings.2 { slave b; channel 0; }
		bindings.3 { slave b; channel 1; }
	}
    
	ttable.0.0 1
	ttable.1.1 1
	ttable.0.2 1
	ttable.1.3 1
}

# input from MPD for sound card (direct DSD only working with type hw)
pcm.${snd_output_hard} {
   	type hw
   	card ${card}
   	device ${device}
}

# input from MPD for peppyalsa	
pcm.mpd_peppyalsa{
	type meter
	slave.pcm "dummy"
	scopes.0 peppyalsa
}
	
pcm_scope.peppyalsa {
	type peppyalsa
	decay_ms 400
	meter "/tmp/myfifo"
	meter_max 100
	meter_show 1
	spectrum "/tmp/myfifosa"
	spectrum_max 100
   	spectrum_size 30
}
	
pcm_scope_type.peppyalsa {
   	lib /usr/local/lib/libpeppyalsa.so
}

pcm.dsp0 peppyalsa

pcm.${snd_output_soft} {
   	type softvol
   	slave.pcm "snd_card"
   	control {
        name "SoftMaster"
        card ${card}
        device ${device}
   	}
   	max_dB 0.0
   	min_dB -50.0
   	resolution 100
}

# sound card output
pcm.snd_card {
   	type hw
   	card ${card}
   	device ${device}
}

# null output
pcm.dummy {
   	type hw
	card Dummy
	device 0
}

# Control device for program compatibility.
ctl.snd_card {
   	type hw
   	card ${card}
   	device ${device}
}
